name: continuous-integration

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.python-version'
      - '.github/workflows/ci.yml'
  pull_request:

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Taskfile (task CLI)
        run: |
          # install task (go-task) using official installer
          curl -sSfL https://taskfile.dev/install.sh | sh -s -- -d -b /usr/local/bin
          task --version

      - name: Install Python CLI 'uv'
        # 'uv' provides the `uv` and `uvx` CLI tools used by the Taskfile.
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install uv

      - name: Use Taskfile to install deps, lint and build
        run: |
          task ci --force --verbose

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest-results.xml

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: pytest-results.xml

      - name: Write test summary to GitHub Actions UI
        if: always()
        run: |
          echo "## ðŸ§ª Test Results and Coverage" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat test_output.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Write coverage summary to GitHub Actions UI
        if: always()
        run: |
          echo "## ðŸ“Š Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          uvx coverage report --show-missing >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY